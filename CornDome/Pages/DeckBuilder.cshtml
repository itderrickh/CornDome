@page
@model DeckBuilderModel
@{
    ViewData["RenderMode"] = "wide";
    ViewData["Title"] = "Deck Builder";
}
<div class="builder-area">
    <div class="tool-area">
        <fieldset class="stats">
            <legend>Stats</legend>
            <div><span class="info-stamp" title="The minimum deck limit is 40 cards."></span> Total Cards: <span id="total-stat">0</span></div>
            <br />
            <div><span class="info-stamp" title="Only 1 Hero is allowed per deck."></span> Heroes: <span id="heroes-stat">0</span></div>
            <div><span class="info-stamp" title="Only 4 Landscapes are allowed per deck."></span> Landscapes: <span id="landscapes-stat">0</span></div>
            <div><span class="info-stamp" title="You can have as many creatures as you like."></span> Creatures: <span id="creature-stat">0</span></div>
            <div><span class="info-stamp" title="You can have as many spells as you like."></span> Spells: <span id="spell-stat">0</span></div>
            <div><span class="info-stamp" title="You can have as many buildings as you like."></span> Buildings: <span id="building-stat">0</span></div>
            <br />
            <div>Blue Plains: <span id="bp-stat">0</span></div>
            <div>Cornfields: <span id="cf-stat">0</span></div>
            <div>Useless Swamp: <span id="us-stat">0</span></div>
            <div>SandyLands: <span id="sl-stat">0</span></div>
            <div>NiceLands: <span id="nl-stat">0</span></div>
            <div>IcyLands: <span id="il-stat">0</span></div>
            <div>Rainbow: <span id="rb-stat">0</span></div>
        </fieldset>

        <fieldset id="actions">
            <legend>Actions</legend>
            <button id="validateButton" type="button" class="btn btn-lg btn-block btn-primary">Validate Deck</button>
            <button id="decklistExport" type="button" class="btn btn-lg btn-block btn-primary">Copy decklist to clipboard</button>
            <button id="permalinkExport" type="button" class="btn btn-lg btn-block btn-primary">Copy permalink to clipboard</button>
            <!--<button id="" type="button" class="btn btn-lg btn-block btn-primary">Data Dive</button>-->
        </fieldset>
    </div>
    <div class="deck-area">
        <h2>Hero</h2>
        <div id="deck-hero">
            @if (Model.QueryDeck != null)
            {
                @if (Model.QueryDeck.Hero != null)
                {
                    CardViewModel cvm = new CardViewModel() { Card = Model.QueryDeck.Hero, IsDeleteable = true };
                    <partial name="_Card" model="cvm" />
                }
            }
        </div>

        <h2>Landscapes</h2>
        <div id="deck-landscapes">
            @if (Model.QueryDeck != null)
            {
                @foreach (var landscape in Model.QueryDeck.Landscapes)
                {
                    CardViewModel cvm = new CardViewModel() { Card = landscape, IsDeleteable = true };
                    <partial name="_Card" model="cvm" />
                }
            }
        </div>

        <h2>Creatures, Spells, and Buildings</h2>
        <div id="deck-cards">
            @if (Model.QueryDeck != null)
            {
                @foreach (var card in Model.QueryDeck.Cards)
                {
                    CardViewModel cvm = new CardViewModel() { Card = card, IsDeleteable = true };
                    <partial name="_Card" model="cvm" />
                }
            }
        </div>
    </div>
    <div class="library-area">
        <fieldset id="filterBox">
            <legend>Filters</legend>
            <div class="filter-group">
                <label for="cardTypeFilter">Card Type: </label>
                <select id="cardTypeFilter">
                    <option value="">- None -</option>
                    <option value="@CardType.Creature">Creature</option>
                    <option value="@CardType.Spell">Spell</option>
                    <option value="@CardType.Building">Building</option>
                    <option value="@CardType.Hero">Hero</option>
                    <option value="@CardType.Landscape">Landscape</option>
                    <option value="@CardType.Teamwork">Teamwork</option>
                </select>
            </div>
            <div class="filter-group">
                <label for="landscapeFilter">Landscape: </label>
                <select id="landscapeFilter">
                    <option value="">- None -</option>
                    <option value="@Landscape.BluePlains">Blue Plains</option>
                    <option value="@Landscape.CornFields">Cornfields</option>
                    <option value="@Landscape.UselessSwamp">Useless Swamp</option>
                    <option value="@Landscape.SandyLands">SandyLands</option>
                    <option value="@Landscape.NiceLands">NiceLands</option>
                    <option value="@Landscape.IcyLands">IcyLands</option>
                    <option value="@Landscape.Rainbow">Rainbow</option>
                </select>
            </div>
            <div class="filter-group">
                <label for="setFilter">Set: </label>
                <select id="setFilter">
                    <option value="">- None -</option>
                    <option value="@Set.FinnVSJake">@SetConverter.ToString(Set.FinnVSJake)</option>
                    <option value="@Set.BMOVSLadyRainicorn">@SetConverter.ToString(Set.BMOVSLadyRainicorn)</option>
                    <option value="@Set.PrincessBubblegumVSLumpySpacePrincess">@SetConverter.ToString(Set.PrincessBubblegumVSLumpySpacePrincess)</option>
                    <option value="@Set.IceKingVSMarceline">@SetConverter.ToString(Set.IceKingVSMarceline)</option>
                    <option value="@Set.LemonGrabVSGunter">@SetConverter.ToString(Set.LemonGrabVSGunter)</option>
                    <option value="@Set.FionnaVSCake">@SetConverter.ToString(Set.FionnaVSCake)</option>
                    <option value="@Set.DoublesTournament">@SetConverter.ToString(Set.DoublesTournament)</option>
                    <option value="@Set.HeroPack">@SetConverter.ToString(Set.HeroPack)</option>
                    <option value="@Set.ForTheGlory">@SetConverter.ToString(Set.ForTheGlory)</option>
                    <option value="@Set.Promo">@SetConverter.ToString(Set.Promo)</option>
                    <option value="@Set.Kickstarter">@SetConverter.ToString(Set.Kickstarter)</option>
                    <option value="@Set.CommunityCards">@SetConverter.ToString(Set.CommunityCards)</option>
                </select>
            </div>
            <div class="filter-group">
                <label for="nameFilter">Name: </label>
                <input type="text" id="nameFilter" />
            </div>
            <div class="filter-group">
                <label for="abilityFilter">Ability: </label>
                <input type="text" id="abilityFilter" />
            </div>
            <div class="filter-group">
                <label for="costFilter">Cost: </label>
                <input type="number" id="costFilter" />
            </div>
            <div class="filter-group">
                <label for="attackFilter">Attack: </label>
                <input type="number" id="attackFilter" />
            </div>
            <div class="filter-group">
                <label for="defenseFilter">Defense: </label>
                <input type="number" id="defenseFilter" />
            </div>
        </fieldset>
        <div style="display: flex; flex-wrap: wrap;">
            @foreach (var card in Model.Cards)
            {
                CardViewModel cvm = new CardViewModel() { Card = card, IsAddable = true };
                <partial name="_Card" model="cvm" />
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="./js/helpers.js"></script>
    <script src="./js/deckbuilder.rendering.js"></script>
    <script src="./js/deckbuilder.handlers.js"></script>
    <script src="./js/filter.js"></script>

    <script>
        var deck = {
            hero: null,
            landscapes: [],
            cards: []
        };

        buildDeckIfExistsInQuery();
    </script>
}

@section Styles {
    <link rel="stylesheet" href="./css/deckbuilder.css" />
}
